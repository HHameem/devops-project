trigger:
- main  

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '5.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet
    - script: |
        dotnet build
      displayName: 'Build project'
    - script: |
        dotnet test
      displayName: 'Run tests'
    - script: |
        dotnet format --verify-no-changes
      displayName: 'Static Code Analysis'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish Artifact'

- stage: Deliver
  dependsOn: Build
  jobs:
  - job: Deliver
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'
    - script: |
        dotnet publish -c Release -o ./publish
      displayName: 'Publish project'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.ArtifactsDirectory)/publish'
        ArtifactName: 'publish'
        publishLocation: 'Container'
      displayName: 'Publish Artifact'

- stage: DeployToDev
  dependsOn: Deliver
  jobs:
  - job: DeployToDev
    steps:
    - script: |
        echo "Deploying to Dev"
      displayName: 'Deploy to Dev'

- stage: DeployToQAT
  dependsOn: DeployToDev
  jobs:
  - job: DeployToQAT
    steps:
    - script: |
        echo "Deploying to QAT"
      displayName: 'Deploy to QAT'

- stage: DeployToStaging
  dependsOn: DeployToQAT
  jobs:
  - job: DeployToStaging
    steps:
    - script: |
        echo "Deploying to Staging"
      displayName: 'Deploy to Staging'

- stage: DeployToProduction
  dependsOn: DeployToStaging
  jobs:
  - job: DeployToProduction
    steps:
    - script: |
        echo "Deploying to Production"
      displayName: 'Deploy to Production'
